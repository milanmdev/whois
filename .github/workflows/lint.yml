name: Lint
on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths-ignore:
      - ".github/**"
      - ".vscode/**"
      - ".husky/**"
      - ".eslintignore"
      - ".gitignore"
      - "**.md"
      - "LICENSE"
      - "package.json"
      - "renovate.json"
      - "tsconfig.json"
  pull_request:
    branches:
      - main
    paths-ignore:
      - ".github/**"
      - ".vscode/**"
      - ".husky/**"
      - ".eslintignore"
      - ".gitignore"
      - "**.md"
      - "LICENSE"
      - "package.json"
      - "renovate.json"
      - "tsconfig.json"
jobs:
  linting:
    name: Lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x, 18.x]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Uses Node.js v${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - name: Setup Yarn Cache
        uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{steps.yarn-cache-dir-path.outputs.dir}}
          key: ${{ runner.OS }}-yarn-cache-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-yarn-cache-

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v3
        with:
          path: ./node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-

      - name: Install dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true' || steps.cache-node-modules.outputs.cache-hit != 'true'
        run: yarn install --immutable

      - name: Lint project with ESLint
        run: yarn lint
